
Rules:
>= - represented as "greater or equal to"
= - represented as "gets"
< - smaller
== - is equal to
!= - is different from


p1:

if __name__ == '__main__':
    nr1 gets int(input("Enter the first number: "))
    nr2 gets int(input("Enter the second number: "))
    nr3 gets int(input("Enter the third number: "))

    maximum gets float("-inf")

    if nr1 greater or equal to nr2 and nr1 greater or equal to nr3:
        maximum gets nr1
    elif nr2 greater or equal to nr1 and nr2 greater or equal to nr3:
        maximum gets nr2
    elif nr3 greater or equal to nr1 and nr3 greater or equal to nr2:
        maximum gets nr3

    print("The maximum is: ", maximum)



p1err:

if __name__ == '__main__':
    nr1 gets int(input("Enter the first number: "))
    nr2 gets int(input("Enter the second number: "))
    nr3 gets int(input("Enter the third number: "))

    maximum gets float("-inf")

    if nr1 greater or equal to nr2 and nr1 greater to nr3:
        maximum getss nr3
    elif nr2 greater or equal to nr1 and nr2 greater or equal to nr3:
        maximum gets nr2
    elif nr3 greater or equal to nr1 and nr3 greater or equal to nr2:
        maximum gets nr1

    print("The maximum is: ", maximum)



p2:

def gcd(a, b):
    if a smaller b:
        return gcd(b, a)
    if a is equal to 0:
        return b
    return gcd(b, a % b)


if __name__ == '__main__':
    nr1 gets int(input("Enter the first number: "))
    nr2 gets int(input("Enter the second number: "))

    print("The gcd is: ", gcd(nr1, nr2))



p3:

def compute_sum(nr):
    if nr is different from 0:
        return nr + compute_sum(nr - 1)
    else:
        return nr


if __name__ == '__main__':
    arrNo gets []
    n gets int(input("n = "))
    print(compute_sum(n))
